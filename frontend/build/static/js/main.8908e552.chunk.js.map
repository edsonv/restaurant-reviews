{"version":3,"sources":["http-common.js","services/restaurant.js","components/add-review.js","components/restaurants.js","components/restaurants-list.js","components/login.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","page","http","get","id","query","by","data","post","put","userId","delete","user_id","AddReview","props","initialReviewState","editing","location","state","currentReview","text","useState","review","setReview","submitted","setSubmitted","user","className","to","match","params","htmlFor","type","required","value","onChange","event","target","name","onClick","restaurant_id","review_id","_id","RestaurantDataService","updateReview","then","response","console","log","catch","e","createReview","Restaurant","address","cuisine","reviews","restaurant","setRestaurant","useEffect","building","street","zipcode","length","map","index","date","reviewId","deleteReview","prevState","splice","pathname","RestaurantsList","restaurants","setRestaurants","searchName","setSearchName","searchZip","setSearchZip","searchCuisine","setSearchCuisine","cuisines","setCuisines","retrieveRestaurants","retrieveCuisines","getAll","getCuisines","concat","find","placeholder","substr","href","Login","setUser","handleInputChange","login","history","push","App","React","a","style","cursor","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8908e552.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport default axios.create({\n  baseURL: \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/restaurant-reviews-ymaxr/service/restaurants/incoming_webhook/\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n})","import http from \"../http-common\";\n\nclass RestaurantDataService {\n  getAll(page = 0) {\n    return http.get(`restaurants?page=${page}`);\n  }\n\n  get(id) {\n    return http.get(`/restaurant?id=${id}`);\n  }\n\n  find(query, by = \"name\", page = 0) {\n    return http.get(`restaurants?${by}=${query}&page=${page}`);\n  }\n\n  createReview(data) {\n    return http.post(\"/review-new\", data);\n  }\n\n  updateReview(data) {\n    return http.put(\"/review-edit\", data);\n  }\n\n  deleteReview(id, userId) {\n    return http.delete(`/review-delete?id=${id}`, { data: { user_id: userId } });\n  }\n\n  getCuisines(id) {\n    return http.get(`/cuisines`);\n  }\n\n}\n\nexport default new RestaurantDataService();","import React, { useState } from \"react\";\nimport RestaurantDataService from \"../services/restaurant\";\nimport { Link } from \"react-router-dom\";\n\nconst AddReview = props => {\n  let initialReviewState = \"\"\n\n  let editing = false;\n\n  if (props.location.state && props.location.state.currentReview) {\n    editing = true;\n    initialReviewState = props.location.state.currentReview.text\n  }\n\n  const [review, setReview] = useState(initialReviewState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    setReview(event.target.value);\n  };\n\n  const saveReview = () => {\n    var data = {\n      text: review,\n      name: props.user.name,\n      user_id: props.user.id,\n      restaurant_id: props.match.params.id\n    };\n\n    if (editing) {\n      data.review_id = props.location.state.currentReview._id\n      RestaurantDataService.updateReview(data)\n        .then(response => {\n          setSubmitted(true);\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      RestaurantDataService.createReview(data)\n        .then(response => {\n          setSubmitted(true);\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n\n  };\n\n  return (\n    <div>\n      {props.user ? (\n        <div className=\"submit-form\">\n          {submitted ? (\n            <div>\n              <h4>You submitted successfully!</h4>\n              <Link to={ \"/restaurants/\" + props.match.params.id } className=\"btn btn-success\">\n                Back to Restaurant\n            </Link>\n            </div>\n          ) : (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">{ editing ? \"Edit\" : \"Create\" } Review</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"text\"\n                  required\n                  value={ review }\n                  onChange={ handleInputChange }\n                  name=\"text\"\n                />\n              </div>\n              <button onClick={ saveReview } className=\"btn btn-success\">\n                Submit\n            </button>\n            </div>\n          ) }\n        </div>\n\n      ) : (\n        <div>\n          Please log in.\n        </div>\n      ) }\n\n    </div>\n  );\n};\n\nexport default AddReview;","import React, { useState, useEffect } from \"react\";\nimport RestaurantDataService from \"../services/restaurant\";\nimport { Link } from \"react-router-dom\";\n\nconst Restaurant = props => {\n  const initialRestaurantState = {\n    id: null,\n    name: \"\",\n    address: {},\n    cuisine: \"\",\n    reviews: []\n  };\n  const [restaurant, setRestaurant] = useState(initialRestaurantState);\n\n  const getRestaurant = id => {\n    RestaurantDataService.get(id)\n      .then(response => {\n        setRestaurant(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getRestaurant(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const deleteReview = (reviewId, index) => {\n    RestaurantDataService.deleteReview(reviewId, props.user.id)\n      .then(response => {\n        setRestaurant((prevState) => {\n          prevState.reviews.splice(index, 1)\n          return ({\n            ...prevState\n          })\n        })\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {restaurant ? (\n        <div>\n          <h5>{ restaurant.name }</h5>\n          <p>\n            <strong>Cuisine: </strong>{ restaurant.cuisine }<br />\n            <strong>Address: </strong>{ restaurant.address.building } { restaurant.address.street }, { restaurant.address.zipcode }\n          </p>\n          <Link to={ \"/restaurants/\" + props.match.params.id + \"/review\" } className=\"btn btn-primary\">\n            Add Review\n          </Link>\n          <h4> Reviews </h4>\n          <div className=\"row\">\n            { restaurant.reviews.length > 0 ? (\n              restaurant.reviews.map((review, index) => {\n                return (\n                  <div className=\"col-lg-4 pb-1\" key={ index }>\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <p className=\"card-text\">\n                          { review.text }<br />\n                          <strong>User: </strong>{ review.name }<br />\n                          <strong>Date: </strong>{ review.date }\n                        </p>\n                        { props.user && props.user.id === review.user_id &&\n                          <div className=\"row\">\n                            <a onClick={ () => deleteReview(review._id, index) } className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Delete</a>\n                            <Link to={ {\n                              pathname: \"/restaurants/\" + props.match.params.id + \"/review\",\n                              state: {\n                                currentReview: review\n                              }\n                            } } className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Edit</Link>\n                          </div>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                );\n              })\n            ) : (\n              <div className=\"col-sm-4\">\n                <p>No reviews yet.</p>\n              </div>\n            ) }\n\n          </div>\n\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>No restaurant selected.</p>\n        </div>\n      ) }\n    </div>\n  );\n};\n\nexport default Restaurant;","import React, { useState, useEffect } from \"react\";\nimport RestaurantDataService from \"../services/restaurant\";\nimport { Link } from \"react-router-dom\";\n\nconst RestaurantsList = props => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n  const [searchZip, setSearchZip] = useState(\"\");\n  const [searchCuisine, setSearchCuisine] = useState(\"\");\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"]);\n\n  useEffect(() => {\n    retrieveRestaurants();\n    retrieveCuisines();\n  }, []);\n\n  const onChangeSearchName = e => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const onChangeSearchZip = e => {\n    const searchZip = e.target.value;\n    setSearchZip(searchZip);\n  };\n\n  const onChangeSearchCuisine = e => {\n    const searchCuisine = e.target.value;\n    setSearchCuisine(searchCuisine);\n\n  };\n\n  const retrieveRestaurants = () => {\n    RestaurantDataService.getAll()\n      .then(response => {\n        console.log(response.data);\n        setRestaurants(response.data.restaurants);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const retrieveCuisines = () => {\n    RestaurantDataService.getCuisines()\n      .then(response => {\n        console.log(response.data);\n        setCuisines([\"All Cuisines\"].concat(response.data));\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveRestaurants();\n  };\n\n  const find = (query, by) => {\n    RestaurantDataService.find(query, by)\n      .then(response => {\n        console.log(response.data);\n        setRestaurants(response.data.restaurants);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByName = () => {\n    find(searchName, \"name\")\n  };\n\n  const findByZip = () => {\n    find(searchZip, \"zipcode\")\n  };\n\n  const findByCuisine = () => {\n    if (searchCuisine === \"All Cuisines\") {\n      refreshList();\n    } else {\n      find(searchCuisine, \"cuisine\")\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row pb-1\">\n        <div className=\"input-group col-lg-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by name\"\n            value={ searchName }\n            onChange={ onChangeSearchName }\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={ findByName }\n            >\n              Search\n            </button>\n          </div>\n        </div>\n        <div className=\"input-group col-lg-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by zip\"\n            value={ searchZip }\n            onChange={ onChangeSearchZip }\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={ findByZip }\n            >\n              Search\n            </button>\n          </div>\n        </div>\n        <div className=\"input-group col-lg-4\">\n\n          <select onChange={ onChangeSearchCuisine }>\n            { cuisines.map(cuisine => {\n              return (\n                <option value={ cuisine }> {cuisine.substr(0, 20) } </option>\n              )\n            }) }\n          </select>\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={ findByCuisine }\n            >\n              Search\n            </button>\n          </div>\n\n        </div>\n      </div>\n      <div className=\"row\">\n        { restaurants.map((restaurant) => {\n          const address = `${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}`;\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{ restaurant.name }</h5>\n                  <p className=\"card-text\">\n                    <strong>Cuisine: </strong>{ restaurant.cuisine }<br />\n                    <strong>Address: </strong>{ address }\n                  </p>\n                  <div className=\"row\">\n                    <Link to={ \"/restaurants/\" + restaurant._id } className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\n                      View Reviews\n                  </Link>\n                    <a target=\"_blank\" href={ \"https://www.google.com/maps/place/\" + address } className=\"btn btn-primary col-lg-5 mx-1 mb-1\">View Map</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }) }\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantsList;","import React, { useState } from \"react\";\n\nconst Login = props => {\n\n  const initialUserState = {\n    name: \"\",\n    id: \"\",\n  };\n\n  const [user, setUser] = useState(initialUserState);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const login = () => {\n    props.login(user)\n    props.history.push('/');\n  }\n\n  return (\n    <div className=\"submit-form\">\n      <div>\n        <div className=\"form-group\">\n          <label htmlFor=\"user\">Username</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            required\n            value={ user.name }\n            onChange={ handleInputChange }\n            name=\"name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"id\">ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"id\"\n            required\n            value={ user.id }\n            onChange={ handleInputChange }\n            name=\"id\"\n          />\n        </div>\n\n        <button onClick={ login } className=\"btn btn-success\">\n          Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","import React from \"react\"\nimport { Switch, Route, Link } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport AddReview from \"./components/add-review\"\nimport Restaurants from \"./components/restaurants\"\nimport RestaurantsList from \"./components/restaurants-list\"\nimport Login from \"./components/login\"\n\nfunction App() {\n  const [user, setUser] = React.useState(null)\n\n  async function login(user = null) {\n    setUser(user)\n  }\n\n  async function logout() {\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/restaurants\" className=\"navbar-brand\">Restaurants Reviews</a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={ \"/restaurants\" } className=\"nav-link\">Restaurants</Link>\n          </li>\n          <li className=\"nav-item\" >\n            { user ? (\n              <button onClick={ logout } className=\"nav-link\" style={ { cursor: 'pointer' } }>\n                Logout {user.name }\n              </button>\n            ) : (\n              <Link to={ \"/login\" } className=\"nav-link\">\n                Login\n              </Link>\n            ) }\n          </li>\n\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={ [\"/\", \"/restaurants\"] } component={ RestaurantsList } />\n          <Route\n            path=\"/restaurants/:id/review\"\n            render={ (props) => (\n              <AddReview { ...props } user={ user } />\n            ) }\n          />\n          <Route\n            path=\"/restaurants/:id\"\n            render={ (props) => (\n              <Restaurants { ...props } user={ user } />\n            ) }\n          />\n          <Route\n            path=\"/login\"\n            render={ (props) => (\n              <Login { ...props } login={ login } />\n            ) }\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}